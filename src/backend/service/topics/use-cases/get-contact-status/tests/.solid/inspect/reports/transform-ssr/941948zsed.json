{"resolvedId":"/Users/joohom/Documents/Projects/SideProjects/tinode/tinode-clone/tinode-clone-2/src/drizzle/schema.ts","transforms":[{"name":"__load__","result":"import { pgTable, pgEnum, pgSchema, AnyPgColumn, serial, varchar, integer, timestamp, uniqueIndex, text, foreignKey } from \"drizzle-orm/pg-core\"\n\nexport const topicType = pgEnum(\"topic_type\", ['group', 'p2p'])\n\nimport { sql } from \"drizzle-orm/sql\"\n\nexport const knexMigrations = pgTable(\"knex_migrations\", {\n\tid: serial(\"id\").notNull(),\n\tname: varchar(\"name\", { length: 255 }),\n\tbatch: integer(\"batch\"),\n\tmigrationTime: timestamp(\"migration_time\", { withTimezone: true, mode: 'string' }),\n});\n\nexport const knexMigrationsLock = pgTable(\"knex_migrations_lock\", {\n\tindex: serial(\"index\").notNull(),\n\tisLocked: integer(\"is_locked\"),\n});\n\nexport const topics = pgTable(\"topics\", {\n\tid: serial(\"id\").notNull(),\n\ttouchedAt: timestamp(\"touched_at\", { mode: 'string' }),\n\tupdatedAt: timestamp(\"updated_at\", { mode: 'string' }).defaultNow().notNull(),\n\tcreatedAt: timestamp(\"created_at\", { mode: 'string' }).defaultNow().notNull(),\n\ttopicType: topicType(\"topic_type\").default('p2p').notNull(),\n});\n\nexport const users = pgTable(\"users\", {\n\tid: serial(\"id\").notNull(),\n\tusername: varchar(\"username\", { length: 255 }).default('').notNull(),\n\tfullname: varchar(\"fullname\", { length: 255 }).default('').notNull(),\n\temail: varchar(\"email\", { length: 255 }).default('').notNull(),\n\tpassword: varchar(\"password\", { length: 255 }).default('').notNull(),\n\tpasswordHash: text(\"password_hash\").default('').notNull(),\n\tuserAgent: varchar(\"user_agent\", { length: 255 }).default('').notNull(),\n\tupdatedAt: timestamp(\"updated_at\", { mode: 'string' }).defaultNow().notNull(),\n\tcreatedAt: timestamp(\"created_at\", { mode: 'string' }).defaultNow().notNull(),\n},\n(table) => {\n\treturn {\n\t\temailKey: uniqueIndex(\"users_email_key\").on(table.email),\n\t\tusernameKey: uniqueIndex(\"users_username_key\").on(table.username),\n\t}\n});\n\nexport const messages = pgTable(\"messages\", {\n\tid: serial(\"id\").notNull(),\n\tcontent: text(\"content\").default('').notNull(),\n\tsequenceId: serial(\"sequence_id\").notNull(),\n\ttopicId: integer(\"topic_id\").notNull().references(() => topics.id),\n\tauthor: varchar(\"author\", { length: 255 }).notNull().references(() => users.username),\n\tupdatedAt: timestamp(\"updated_at\", { mode: 'string' }).defaultNow().notNull(),\n\tcreatedAt: timestamp(\"created_at\", { mode: 'string' }).defaultNow().notNull(),\n},\n(table) => {\n\treturn {\n\t\tsequenceIdKey: uniqueIndex(\"messages_sequence_id_key\").on(table.sequenceId),\n\t}\n});\n\nexport const subscriptions = pgTable(\"subscriptions\", {\n\tid: serial(\"id\").notNull(),\n\ttopicId: integer(\"topic_id\").notNull().references(() => topics.id),\n\tusername: varchar(\"username\", { length: 255 }).notNull().references(() => users.username),\n\treadSeqId: integer(\"read_seq_id\").references(() => messages.sequenceId),\n\trecvSeqId: integer(\"recv_seq_id\").references(() => messages.sequenceId),\n\tupdatedAt: timestamp(\"updated_at\", { mode: 'string' }).defaultNow().notNull(),\n\tcreatedAt: timestamp(\"created_at\", { mode: 'string' }).defaultNow().notNull(),\n},\n(table) => {\n\treturn {\n\t\tusernameTopicIdKey: uniqueIndex(\"subscriptions_username_topic_id_key\").on(table.topicId, table.username),\n\t}\n});","start":1682217044636,"end":1682217044636},{"name":"vite:esbuild","result":"import { pgTable, pgEnum, serial, varchar, integer, timestamp, uniqueIndex, text } from \"drizzle-orm/pg-core\";\nexport const topicType = pgEnum(\"topic_type\", [\"group\", \"p2p\"]);\nexport const knexMigrations = pgTable(\"knex_migrations\", {\n  id: serial(\"id\").notNull(),\n  name: varchar(\"name\", { length: 255 }),\n  batch: integer(\"batch\"),\n  migrationTime: timestamp(\"migration_time\", { withTimezone: true, mode: \"string\" })\n});\nexport const knexMigrationsLock = pgTable(\"knex_migrations_lock\", {\n  index: serial(\"index\").notNull(),\n  isLocked: integer(\"is_locked\")\n});\nexport const topics = pgTable(\"topics\", {\n  id: serial(\"id\").notNull(),\n  touchedAt: timestamp(\"touched_at\", { mode: \"string\" }),\n  updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n  createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull(),\n  topicType: topicType(\"topic_type\").default(\"p2p\").notNull()\n});\nexport const users = pgTable(\n  \"users\",\n  {\n    id: serial(\"id\").notNull(),\n    username: varchar(\"username\", { length: 255 }).default(\"\").notNull(),\n    fullname: varchar(\"fullname\", { length: 255 }).default(\"\").notNull(),\n    email: varchar(\"email\", { length: 255 }).default(\"\").notNull(),\n    password: varchar(\"password\", { length: 255 }).default(\"\").notNull(),\n    passwordHash: text(\"password_hash\").default(\"\").notNull(),\n    userAgent: varchar(\"user_agent\", { length: 255 }).default(\"\").notNull(),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      emailKey: uniqueIndex(\"users_email_key\").on(table.email),\n      usernameKey: uniqueIndex(\"users_username_key\").on(table.username)\n    };\n  }\n);\nexport const messages = pgTable(\n  \"messages\",\n  {\n    id: serial(\"id\").notNull(),\n    content: text(\"content\").default(\"\").notNull(),\n    sequenceId: serial(\"sequence_id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    author: varchar(\"author\", { length: 255 }).notNull().references(() => users.username),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      sequenceIdKey: uniqueIndex(\"messages_sequence_id_key\").on(table.sequenceId)\n    };\n  }\n);\nexport const subscriptions = pgTable(\n  \"subscriptions\",\n  {\n    id: serial(\"id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    username: varchar(\"username\", { length: 255 }).notNull().references(() => users.username),\n    readSeqId: integer(\"read_seq_id\").references(() => messages.sequenceId),\n    recvSeqId: integer(\"recv_seq_id\").references(() => messages.sequenceId),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      usernameTopicIdKey: uniqueIndex(\"subscriptions_username_topic_id_key\").on(table.topicId, table.username)\n    };\n  }\n);\n","start":1682217044636,"end":1682217044637,"order":"normal"},{"name":"vite:define","result":"import { pgTable, pgEnum, serial, varchar, integer, timestamp, uniqueIndex, text } from \"drizzle-orm/pg-core\";\nexport const topicType = pgEnum(\"topic_type\", [\"group\", \"p2p\"]);\nexport const knexMigrations = pgTable(\"knex_migrations\", {\n  id: serial(\"id\").notNull(),\n  name: varchar(\"name\", { length: 255 }),\n  batch: integer(\"batch\"),\n  migrationTime: timestamp(\"migration_time\", { withTimezone: true, mode: \"string\" })\n});\nexport const knexMigrationsLock = pgTable(\"knex_migrations_lock\", {\n  index: serial(\"index\").notNull(),\n  isLocked: integer(\"is_locked\")\n});\nexport const topics = pgTable(\"topics\", {\n  id: serial(\"id\").notNull(),\n  touchedAt: timestamp(\"touched_at\", { mode: \"string\" }),\n  updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n  createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull(),\n  topicType: topicType(\"topic_type\").default(\"p2p\").notNull()\n});\nexport const users = pgTable(\n  \"users\",\n  {\n    id: serial(\"id\").notNull(),\n    username: varchar(\"username\", { length: 255 }).default(\"\").notNull(),\n    fullname: varchar(\"fullname\", { length: 255 }).default(\"\").notNull(),\n    email: varchar(\"email\", { length: 255 }).default(\"\").notNull(),\n    password: varchar(\"password\", { length: 255 }).default(\"\").notNull(),\n    passwordHash: text(\"password_hash\").default(\"\").notNull(),\n    userAgent: varchar(\"user_agent\", { length: 255 }).default(\"\").notNull(),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      emailKey: uniqueIndex(\"users_email_key\").on(table.email),\n      usernameKey: uniqueIndex(\"users_username_key\").on(table.username)\n    };\n  }\n);\nexport const messages = pgTable(\n  \"messages\",\n  {\n    id: serial(\"id\").notNull(),\n    content: text(\"content\").default(\"\").notNull(),\n    sequenceId: serial(\"sequence_id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    author: varchar(\"author\", { length: 255 }).notNull().references(() => users.username),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      sequenceIdKey: uniqueIndex(\"messages_sequence_id_key\").on(table.sequenceId)\n    };\n  }\n);\nexport const subscriptions = pgTable(\n  \"subscriptions\",\n  {\n    id: serial(\"id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    username: varchar(\"username\", { length: 255 }).notNull().references(() => users.username),\n    readSeqId: integer(\"read_seq_id\").references(() => messages.sequenceId),\n    recvSeqId: integer(\"recv_seq_id\").references(() => messages.sequenceId),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      usernameTopicIdKey: uniqueIndex(\"subscriptions_username_topic_id_key\").on(table.topicId, table.username)\n    };\n  }\n);\n","start":1682217044637,"end":1682217044637,"order":"normal"},{"name":"vite:import-analysis","result":"import { pgTable, pgEnum, serial, varchar, integer, timestamp, uniqueIndex, text } from \"drizzle-orm/pg-core\";\nexport const topicType = pgEnum(\"topic_type\", [\"group\", \"p2p\"]);\nexport const knexMigrations = pgTable(\"knex_migrations\", {\n  id: serial(\"id\").notNull(),\n  name: varchar(\"name\", { length: 255 }),\n  batch: integer(\"batch\"),\n  migrationTime: timestamp(\"migration_time\", { withTimezone: true, mode: \"string\" })\n});\nexport const knexMigrationsLock = pgTable(\"knex_migrations_lock\", {\n  index: serial(\"index\").notNull(),\n  isLocked: integer(\"is_locked\")\n});\nexport const topics = pgTable(\"topics\", {\n  id: serial(\"id\").notNull(),\n  touchedAt: timestamp(\"touched_at\", { mode: \"string\" }),\n  updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n  createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull(),\n  topicType: topicType(\"topic_type\").default(\"p2p\").notNull()\n});\nexport const users = pgTable(\n  \"users\",\n  {\n    id: serial(\"id\").notNull(),\n    username: varchar(\"username\", { length: 255 }).default(\"\").notNull(),\n    fullname: varchar(\"fullname\", { length: 255 }).default(\"\").notNull(),\n    email: varchar(\"email\", { length: 255 }).default(\"\").notNull(),\n    password: varchar(\"password\", { length: 255 }).default(\"\").notNull(),\n    passwordHash: text(\"password_hash\").default(\"\").notNull(),\n    userAgent: varchar(\"user_agent\", { length: 255 }).default(\"\").notNull(),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      emailKey: uniqueIndex(\"users_email_key\").on(table.email),\n      usernameKey: uniqueIndex(\"users_username_key\").on(table.username)\n    };\n  }\n);\nexport const messages = pgTable(\n  \"messages\",\n  {\n    id: serial(\"id\").notNull(),\n    content: text(\"content\").default(\"\").notNull(),\n    sequenceId: serial(\"sequence_id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    author: varchar(\"author\", { length: 255 }).notNull().references(() => users.username),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      sequenceIdKey: uniqueIndex(\"messages_sequence_id_key\").on(table.sequenceId)\n    };\n  }\n);\nexport const subscriptions = pgTable(\n  \"subscriptions\",\n  {\n    id: serial(\"id\").notNull(),\n    topicId: integer(\"topic_id\").notNull().references(() => topics.id),\n    username: varchar(\"username\", { length: 255 }).notNull().references(() => users.username),\n    readSeqId: integer(\"read_seq_id\").references(() => messages.sequenceId),\n    recvSeqId: integer(\"recv_seq_id\").references(() => messages.sequenceId),\n    updatedAt: timestamp(\"updated_at\", { mode: \"string\" }).defaultNow().notNull(),\n    createdAt: timestamp(\"created_at\", { mode: \"string\" }).defaultNow().notNull()\n  },\n  (table) => {\n    return {\n      usernameTopicIdKey: uniqueIndex(\"subscriptions_username_topic_id_key\").on(table.topicId, table.username)\n    };\n  }\n);\n","start":1682217044638,"end":1682217044639,"order":"normal"}]}
