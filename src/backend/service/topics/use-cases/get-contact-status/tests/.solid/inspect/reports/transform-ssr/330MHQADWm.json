{"resolvedId":"/Users/joohom/Documents/Projects/SideProjects/tinode/tinode-clone/tinode-clone-2/src/backend/service/utils/online-registry.ts","transforms":[{"name":"__load__","result":"import { Socket } from \"../../router/socket\";\n\ntype Username = string;\n\ntype User = {\n  socket: Socket;\n  /** the contact user is typing to, if user is not typing, this will be undefined */\n  typing?: string;\n};\n\nclass OnlineUsers {\n  #users: Map<Username, User>;\n\n  constructor() {\n    this.#users = new Map();\n  }\n\n  get(username: Username) {\n    return this.#users.get(username);\n  }\n\n  add(username: Username, socket: Socket) {\n    this.#users.set(username, { socket });\n  }\n\n  has(username: Username) {\n    return this.#users.has(username);\n  }\n\n  remove(username: Username) {\n    this.#users.delete(username);\n  }\n\n  entries() {\n    return this.#users.entries();\n  }\n\n  isTyping(username: Username, contact: string) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = contact;\n    }\n  }\n\n  stopTyping(username: Username) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = undefined;\n    }\n  }\n}\n\nexport default OnlineUsers;\n","start":1682217044668,"end":1682217044668},{"name":"vite:esbuild","result":"class OnlineUsers {\n  #users;\n  constructor() {\n    this.#users = /* @__PURE__ */ new Map();\n  }\n  get(username) {\n    return this.#users.get(username);\n  }\n  add(username, socket) {\n    this.#users.set(username, { socket });\n  }\n  has(username) {\n    return this.#users.has(username);\n  }\n  remove(username) {\n    this.#users.delete(username);\n  }\n  entries() {\n    return this.#users.entries();\n  }\n  isTyping(username, contact) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = contact;\n    }\n  }\n  stopTyping(username) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = void 0;\n    }\n  }\n}\nexport default OnlineUsers;\n","start":1682217044668,"end":1682217044668,"order":"normal"},{"name":"vite:define","result":"class OnlineUsers {\n  #users;\n  constructor() {\n    this.#users = /* @__PURE__ */ new Map();\n  }\n  get(username) {\n    return this.#users.get(username);\n  }\n  add(username, socket) {\n    this.#users.set(username, { socket });\n  }\n  has(username) {\n    return this.#users.has(username);\n  }\n  remove(username) {\n    this.#users.delete(username);\n  }\n  entries() {\n    return this.#users.entries();\n  }\n  isTyping(username, contact) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = contact;\n    }\n  }\n  stopTyping(username) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = void 0;\n    }\n  }\n}\nexport default OnlineUsers;\n","start":1682217044668,"end":1682217044668,"order":"normal"},{"name":"vite:import-analysis","result":"class OnlineUsers {\n  #users;\n  constructor() {\n    this.#users = /* @__PURE__ */ new Map();\n  }\n  get(username) {\n    return this.#users.get(username);\n  }\n  add(username, socket) {\n    this.#users.set(username, { socket });\n  }\n  has(username) {\n    return this.#users.has(username);\n  }\n  remove(username) {\n    this.#users.delete(username);\n  }\n  entries() {\n    return this.#users.entries();\n  }\n  isTyping(username, contact) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = contact;\n    }\n  }\n  stopTyping(username) {\n    const user = this.#users.get(username);\n    if (user) {\n      user.typing = void 0;\n    }\n  }\n}\nexport default OnlineUsers;\n","start":1682217044668,"end":1682217044668,"order":"normal"}]}
