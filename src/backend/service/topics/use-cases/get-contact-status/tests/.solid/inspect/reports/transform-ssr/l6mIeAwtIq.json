{"resolvedId":"/Users/joohom/Documents/Projects/SideProjects/tinode/tinode-clone/tinode-clone-2/src/backend/service2/topics/use-cases/get-contact-status/get-contact-status.ts","transforms":[{"name":"__load__","result":"import { NodePgDatabase } from \"drizzle-orm/node-postgres\";\nimport { getUserContact } from \"./get-contact-status.repo\";\nimport { err, ok } from \"neverthrow\";\nimport OnlineUsers from \"../../../../service/utils/online-registry\";\n\nexport async function getContactStatus(\n  ctx: { db: NodePgDatabase; onlineUsers: OnlineUsers },\n  input: {\n    username: string;\n  }\n) {\n  const result = await getUserContact(ctx, input);\n  if (result.isErr()) {\n    return err(result.error);\n  }\n\n  const contactStatus = result.value.map((topic) => {\n    const user = ctx.onlineUsers.get(topic.username);\n    if (user) {\n      return {\n        username: topic.username,\n        online: true,\n        isTyping:\n          user.typing === undefined ? false : user.typing === input.username,\n      };\n    } else {\n      return {\n        username: topic.username,\n        online: false,\n      };\n    }\n  });\n\n  return ok(contactStatus);\n}\n","start":1682217044658,"end":1682217044658},{"name":"vite:esbuild","result":"import { getUserContact } from \"./get-contact-status.repo\";\nimport { err, ok } from \"neverthrow\";\nexport async function getContactStatus(ctx, input) {\n  const result = await getUserContact(ctx, input);\n  if (result.isErr()) {\n    return err(result.error);\n  }\n  const contactStatus = result.value.map((topic) => {\n    const user = ctx.onlineUsers.get(topic.username);\n    if (user) {\n      return {\n        username: topic.username,\n        online: true,\n        isTyping: user.typing === void 0 ? false : user.typing === input.username\n      };\n    } else {\n      return {\n        username: topic.username,\n        online: false\n      };\n    }\n  });\n  return ok(contactStatus);\n}\n","start":1682217044658,"end":1682217044659,"order":"normal"},{"name":"vite:define","result":"import { getUserContact } from \"./get-contact-status.repo\";\nimport { err, ok } from \"neverthrow\";\nexport async function getContactStatus(ctx, input) {\n  const result = await getUserContact(ctx, input);\n  if (result.isErr()) {\n    return err(result.error);\n  }\n  const contactStatus = result.value.map((topic) => {\n    const user = ctx.onlineUsers.get(topic.username);\n    if (user) {\n      return {\n        username: topic.username,\n        online: true,\n        isTyping: user.typing === void 0 ? false : user.typing === input.username\n      };\n    } else {\n      return {\n        username: topic.username,\n        online: false\n      };\n    }\n  });\n  return ok(contactStatus);\n}\n","start":1682217044659,"end":1682217044659,"order":"normal"},{"name":"vite:import-analysis","result":"import { getUserContact } from \"/get-contact-status.repo.ts\";\nimport { err, ok } from \"neverthrow\";\nexport async function getContactStatus(ctx, input) {\n  const result = await getUserContact(ctx, input);\n  if (result.isErr()) {\n    return err(result.error);\n  }\n  const contactStatus = result.value.map((topic) => {\n    const user = ctx.onlineUsers.get(topic.username);\n    if (user) {\n      return {\n        username: topic.username,\n        online: true,\n        isTyping: user.typing === void 0 ? false : user.typing === input.username\n      };\n    } else {\n      return {\n        username: topic.username,\n        online: false\n      };\n    }\n  });\n  return ok(contactStatus);\n}\n","start":1682217044659,"end":1682217044659,"order":"normal"}]}
